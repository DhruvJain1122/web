{"version":3,"sources":["logo.svg","web3.js","source.js","destination.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","arbitrum_id","arbitrum_url","optimism_id","App","state","amount","address","loading","current_chain","source_transactions","destination_transactions","current_page","changeToSource","event","a","setState","params","chainId","source","methods","getTransactions","call","source_trans","changeToHome","changeToDestination","destination","dest_trans","onNewTransfer","getAccounts","accounts","console","log","fees","utils","toWei","newTransaction","send","from","value","parseFloat","ans","code","rpcUrl","error","onBuyReciept","details","completeTransfer","onTransferWithdrawl","transferToTrader","transferId","checkNetwork","alert","this","destination_trans","className","class","onClick","message","onChange","e","target","type","placeholder","width","height","xmlns","d","fill","map","item","fromWei","toFixed","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5de0d3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Web3 from \"web3\";\r\n \r\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\r\n \r\nconst web3 = new Web3(window.ethereum);\r\n \r\nexport default web3;\r\n","import web3 from './web3';\r\n\r\nconst address = '0xb426FC7c8941b621595b0b2349fE1205D7Dba7d6';\r\nconst abi = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getTransactions\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"destination\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"fee\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"startTime\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"feeRampup\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"transferId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct Source.TransferData[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"destination\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"fees\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"newTransaction\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transactions\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"destination\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"fee\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"startTime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"feeRampup\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"transferId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"destination\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"transferId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferToTrader\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n \r\nexport default new web3.eth.Contract(abi, address);\r\n\r\n","import web3 from './web3';\r\n\r\nconst address = '0x665ab45170f873d6ae9cFec43d04998e3BC7200c';\r\nconst abi = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"destination\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"fees\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"transferId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"traderAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"completeTransfer\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getTransactions\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"destination\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"startTime\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"transferId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct Destination.TransferData[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"successfulTransfer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"destination\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"amount\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"startTime\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"transferId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n \r\nexport default new web3.eth.Contract(abi, address);\r\n\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {Component,componentDidMount} from 'react';\r\nimport web3 from './web3';\r\nimport source from './source';\r\n// import LoadingOverlay from 'react-loading-overlay';\r\n\r\n\r\nimport destination from './destination';\r\nconst arbitrum_id = '0x66EEB';\r\nconst arbitrum_url = 'https://rinkeby.arbitrum.io/rpc';\r\nconst optimism_id = '0x45';\r\nconst optimism_url = 'https://kovan.optimism.io';\r\nclass App extends Component{\r\n  state = {\r\n    amount : 0,\r\n    address : '',\r\n    loading : false,\r\n    current_chain : arbitrum_id,\r\n    source_transactions : [],\r\n    destination_transactions : [],\r\n    current_page : \"home\"\r\n  }\r\n   changeToSource = async (event) =>{\r\n    this.setState({current_chain:arbitrum_id});\r\n    try{\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: arbitrum_id }], // chainId must be in hexadecimal numbers\r\n      });\r\n    this.setState({current_page:\"source\"});\r\n    const source_trans = await source.methods.getTransactions().call();\r\n   this.setState({source_transactions:source_trans});\r\n    }catch(err){\r\n\r\n    }\r\n   }\r\n   changeToHome = async (event) =>{\r\n    this.setState({current_page:\"home\"});\r\n   }\r\n   changeToDestination = async (event) =>{\r\n\r\n    this.setState({current_chain:optimism_id});\r\n    try{\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: optimism_id }], // chainId must be in hexadecimal numbers\r\n      });\r\n    this.setState({current_page:\"bounty\"});\r\n    const dest_trans = await destination.methods.getTransactions().call();\r\n   this.setState({destination_transactions:dest_trans});\r\n    }catch(err){\r\n\r\n    }\r\n   }\r\n  async componentDidMount(){\r\n    const source_trans = await source.methods.getTransactions().call();\r\n   this.setState({source_transactions:source_trans});\r\n   const destination_trans = await destination.methods.getTransactions().call();\r\n   this.setState({destination_transactions:destination_trans});\r\n\r\n    console.log(source_trans);\r\n  }\r\n onNewTransfer = async (event) => {\r\n   this.setState({current_chain:arbitrum_id});\r\n  //  await this.checkNetwork();\r\n  try{\r\n    await window.ethereum.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: arbitrum_id }], // chainId must be in hexadecimal numbers\r\n    });\r\n    const accounts = await web3.eth.getAccounts();\r\n   console.log(accounts[0]);\r\n    const fees = web3.utils.toWei( '0.001','ether');\r\n   this.setState({loading:true});\r\n   const ans = await source.methods.newTransaction(this.state.address,fees).send({\r\n     from :  accounts[0],\r\n     value : parseFloat(web3.utils.toWei( this.state.amount,'ether')) + parseFloat(fees)\r\n   });\r\n   this.setState({loading:false});\r\n\r\n   console.log(ans);\r\n  }catch(error){\r\n    if (error.code === 4902) {\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: this.state.current_chain,\r\n              rpcUrl: arbitrum_url,\r\n            },\r\n          ],\r\n        });\r\n      } catch (addError) {\r\n        console.error(addError);\r\n      }\r\n  }\r\n}\r\n   \r\n\r\n }\r\n async changeChain(){\r\n  await window.ethereum.request({\r\n    method: 'wallet_switchEthereumChain',\r\n    params: [{ chainId: this.state.current_chain }], // chainId must be in hexadecimal numbers\r\n  });\r\n }\r\n onBuyReciept = async (details) => {\r\n  this.setState({current_chain:optimism_id});\r\n  //  await this.checkNetwork();\r\n  try{\r\n    await window.ethereum.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: optimism_id }], // chainId must be in hexadecimal numbers\r\n    });\r\n    const accounts = await web3.eth.getAccounts();\r\n   console.log(details[1]);\r\n\r\n  //  this.setState({loading:true});\r\n   const ans = await destination.methods.completeTransfer(details[0],details[1], details[2],details[5],this.state.address).send({\r\n     from :  accounts[0],\r\n     value :  details.amount\r\n   });\r\n   this.setState({loading:false});\r\n   console.log(\"buying\")\r\n   console.log(ans);\r\n  }catch(error){\r\n    if (error.code === 4902) {\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: this.state.current_chain,\r\n              rpcUrl: arbitrum_url,\r\n            },\r\n          ],\r\n        });\r\n      } catch (addError) {\r\n        console.error(addError);\r\n      }\r\n  }\r\n}\r\n }\r\n\r\n\r\n\r\n onTransferWithdrawl = async (details) => {\r\n  this.setState({current_chain:arbitrum_id});\r\n  //  await this.checkNetwork();\r\n  try{\r\n    await window.ethereum.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: arbitrum_id }], // chainId must be in hexadecimal numbers\r\n    });\r\n    const accounts = await web3.eth.getAccounts();\r\n   console.log(accounts[0]);\r\n\r\n  //  this.setState({loading:true});\r\n   const ans = await source.methods.transferToTrader(details.destination,details.amount,details.transferId).send({\r\n     from :  accounts[0],\r\n   });\r\n   this.setState({loading:false});\r\n\r\n   console.log(ans);\r\n  }catch(error){\r\n    if (error.code === 4902) {\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: this.state.current_chain,\r\n              rpcUrl: arbitrum_url,\r\n            },\r\n          ],\r\n        });\r\n      } catch (addError) {\r\n        console.error(addError);\r\n      }\r\n  }\r\n}\r\n }\r\n\r\n checkNetwork = async ()=>{\r\n  if (window.ethereum) {\r\n    try {\r\n      // check if the chain to connect to is installed\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: this.state.current_chain }], // chainId must be in hexadecimal numbers\r\n      });\r\n      // await window.ethereum.request({\r\n      //   method: 'wallet_switchEthereumChain',\r\n      //   params: [{ chainId: optimism_id }], // chainId must be in hexadecimal numbers\r\n      // });\r\n    } catch (error) {\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      // if it is not, then install it into the user MetaMask\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [\r\n              {\r\n                chainId: this.state.current_chain,\r\n                rpcUrl: arbitrum_url,\r\n              },\r\n            ],\r\n          });\r\n        } catch (addError) {\r\n          console.error(addError);\r\n        }\r\n      }\r\n      console.error(error);\r\n    }\r\n  } else {\r\n    // if no window.ethereum then MetaMask is not installed\r\n    alert('MetaMask is not installed. Please consider installing it: https://metamask.io/download.html');\r\n  } \r\n }\r\n\r\n\r\n  render(){\r\n    return (\r\n      \r\n  //     <LoadingOverlay\r\n  // active={this.state.loading}\r\n  // spinner\r\n  // text='Loading your content...'\r\n  // >\r\n      <div className=\"App\">\r\n          <div class=\"text-2xl text-white py-5 gap-2\">\r\n          <button onClick={\r\n              this.changeToHome\r\n            }>Home</button>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button onClick={\r\n              this.changeToSource\r\n            }>Bounty</button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n            \r\n            <button onClick={\r\n              this.changeToDestination\r\n            }>Withdraw</button>\r\n           \r\n            \r\n          </div>\r\n\r\n        <header className=\"App-header\">\r\n        <div class=\"content-center\">\r\n          {(() => {\r\n            if (this.state.current_page == \"home\") {\r\n              return (\r\n                <div class=\"relative flex w-full flex-wrap grid grid-row-3 space-y-4\">\r\n          \r\n          <div class=\"row-span-1 \">0.001 Ether(Fees)</div>\r\n      <div class=\"row-span-1\">+</div>\r\n          <div class=\"row-span-1 flex-wrap grid-cols-2 gap-2\">\r\n    \r\n        {this.state.message}\r\n      <input value={this.state.amount} onChange={e => this.setState({amount : e.target.value})}  type=\"number\" placeholder=\"Ether (Arbitrum)\" class=\"h-50 w-50 px-3 py-3 text-2xl placeholder-blueGray-300 text-black relative bg-white bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring  pr-10\"/>\r\n      <span class=\"z-10 h-full leading-snug font-normal absolute text-center text-blueGray-300 absolute bg-transparent rounded text-base items-center justify-center w-8 right-0 pr-3 py-3\">\r\n      </span>\r\n      </div>\r\n      <b></b>\r\n        <center>\r\n      <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M11 21.883l-6.235-7.527-.765.644 7.521 9 7.479-9-.764-.645-6.236 7.529v-21.884h-1v21.883z\" fill=\"white\"/></svg>\r\n    \r\n        </center>\r\n    <input value={this.state.address} onChange={e => this.setState({address : e.target.value})} type=\"text\" placeholder=\"Address(Optimum)\" class=\"h-50 w-50 px-3 py-3 text-2xl placeholder-blueGray-300 text-black relative bg-white bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring  pr-10\"/>\r\n    <div></div>\r\n    <button class=\"bg-red-500 hover:bg-blue-700 text-white text-3xl font-bold py-2 px-4 rounded\" onClick={this.onNewTransfer}>\r\n      Confirm\r\n    </button>\r\n    \r\n    </div>\r\n              )\r\n            } else if (this.state.current_page == \"source\") {\r\n              return (\r\n                this.state.source_transactions.map(item=>(\r\n                  <div>\r\n                    <div className=\"grid grid-cols-3 text-black bg-white rounded px-3 py-3 w-90 gap-4\">\r\n                  <div>\r\n                  Arbitrum -> Optimum \r\n                  </div>\r\n                  <div>\r\n                    {parseFloat(web3.utils.fromWei(item.amount,'ether')).toFixed(3)} ether + 0.001(Reward)\r\n                  </div>\r\n                  <input value={this.state.address} onChange={e => this.setState({address : e.target.value})}  type=\"text\" placeholder=\"Withdrawal Address\" class=\"h-50 w-50 px-3 py-3 text-2xl placeholder-blueGray-300 text-black relative bg-white bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring  pr-10\"/>\r\n                  <div class=\" col-end-6 ...\">\r\n                  <button class=\"bg-red-500 hover:bg-blue-700 text-white text-3xl font-bold py-2 px-4 rounded\" onClick={() => this.onBuyReciept(item)}>\r\n                  Buy\r\n                </button>\r\n                  </div>\r\n                </div>\r\n                <br></br>\r\n                  </div>\r\n                ))\r\n              )\r\n            } else if (this.state.current_page == \"bounty\")  {\r\n              return (\r\n                this.state.destination_transactions.map(item=>(\r\n                  <div>\r\n                    <div className=\"grid grid-cols-3 text-black bg-white rounded px-3 py-3 w-90 gap-4\">\r\n                  <div>\r\n                  Arbitrum -> Optimum \r\n                  </div>\r\n                  <div>\r\n                    {parseFloat(web3.utils.fromWei(item.amount,'ether')).toFixed(3)} ether\r\n                  </div>\r\n                  <div class=\" col-end-6 ...\">\r\n                  <button class=\"bg-red-500 hover:bg-blue-700 text-white text-3xl font-bold py-2 px-4 rounded\" onClick={() => this.onTransferWithdrawl(item)}>\r\n                  Withdraw\r\n                </button>\r\n                  </div>\r\n                </div>\r\n                <br></br>\r\n                  </div>\r\n                ))\r\n              )\r\n            }\r\n          })()}\r\n        \r\n  <br></br>\r\n  \r\n  </div>\r\n      {\r\n        \r\n      }\r\n        </header>\r\n        \r\n      </div>\r\n      // </LoadingOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}